#!/usr/bin/env python3

import os
import sys

def convert_font_to_header(font_path, output_path):
    with open(font_path, 'rb') as f:
        font_data = f.read()
    
    header_content = f"""// This file was automatically generated by convert_font.py
// Do not edit manually

#pragma once

#include <cstdint>

namespace GUI {{

inline constexpr std::uint8_t FONT_BYTES[] = {{
    {', '.join(f'0x{b:02x}' for b in font_data)}
}};

}}  // namespace GUI
"""
    
    with open(output_path, 'w') as f:
        f.write(header_content)
    
    print(f"Successfully converted {font_path} to {output_path}")
    print(f"Font size: {len(font_data)} bytes")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python3 convert_font.py <input_font_path> <output_header_path>")
        sys.exit(1)
    
    font_path = sys.argv[1]
    output_path = sys.argv[2]
    
    if not os.path.exists(font_path):
        print(f"Error: Font file '{font_path}' not found")
        sys.exit(1)
    
    convert_font_to_header(font_path, output_path) 